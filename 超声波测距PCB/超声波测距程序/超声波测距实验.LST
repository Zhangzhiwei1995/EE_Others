C51 COMPILER V9.50a   ______________                                                       12/19/2013 14:11:59 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE ______________
OBJECT MODULE PLACED IN 超声波测距实验.OBJ
COMPILER INVOKED BY: C:\Program Files\keil\C51\C51\BIN\C51.EXE 超声波测距实验.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          //超声波模块显示程序
   2          #include <reg52.h>     //包括一个52标准内核的头文件
   3          #include<intrins.h>  //包含_nop_()函数定义的头文件
   4          #define uchar unsigned char //定义一下方便使用
   5          #define uint  unsigned int
   6          #define ulong unsigned long
   7          sbit Tx  = P3^7; //产生脉冲引脚
   8          sbit Rx  = P3^2; //回波引脚
   9          sbit KEY =P3^3;//按键
  10          sbit BEEP =P1^0;//按键
  11          sbit RS=P2^5;    //寄存器选择位，将RS位定义为P2.0引脚
  12          sbit RW=P2^6;    //读写选择位，将RW位定义为P2.1引脚
  13          sbit E=P2^7;     //使能信号位，将E位定义为P2.2引脚
  14          sbit BF=P0^7;    //忙碌标志位，，将BF位定义为P0.7引脚
  15          //unsigned char code string[ ]= {"CHAO SHENG BO"}; 
  16          unsigned char code digit[ ]={"0123456789"}; //定义字符数组显示数字
  17          uint distance[4];  //测距接收缓冲区
  18          uchar ge,shi,bai,qian,temp,flag,outcomeH,outcomeL,i,j;  //自定义寄存器
  19          bit succeed_flag;  //测量成功标志
  20          //********函数声明
  21          void conversion(uint temp_data);
  22          void delay_20us();
  23          void pai_xu();
  24          
  25          
  26          /*****************************************************
  27          函数功能：延时1ms
  28          (3j+2)*i=(3×33+2)×10=1010(微秒)，可以认为是1毫秒
  29          ***************************************************/
  30          void delay1ms()
  31          {
  32   1         unsigned char i,j; 
  33   1         for(i=0;i<10;i++)
  34   1          for(j=0;j<33;j++)
  35   1           ;     
  36   1       }
  37          /*****************************************************
  38          函数功能：延时若干毫秒
  39          入口参数：n
  40          ***************************************************/
  41           void delay(unsigned char n)
  42           {
  43   1         unsigned char i;
  44   1        for(i=0;i<n;i++)
  45   1           delay1ms();
  46   1       }
  47            
  48          /*****************************************************
  49          函数功能：判断液晶模块的忙碌状态
  50          返回值：result。result=1，忙碌;result=0，不忙
  51          ***************************************************/
  52           unsigned char BusyTest(void)
  53            {
  54   1          bit result;
  55   1        RS=0;       //根据规定，RS为低电平，RW为高电平时，可以读状态
C51 COMPILER V9.50a   ______________                                                       12/19/2013 14:11:59 PAGE 2   

  56   1          RW=1;
  57   1          E=1;        //E=1，才允许读写
  58   1          _nop_();   //空操作
  59   1          _nop_();
  60   1          _nop_(); 
  61   1          _nop_();   //空操作四个机器周期，给硬件反应时间 
  62   1          result=BF;  //将忙碌标志电平赋给result
  63   1         E=0;         //将E恢复低电平
  64   1          return result;
  65   1        }
  66          /*****************************************************
  67          函数功能：将模式设置指令或显示地址写入液晶模块
  68          入口参数：dictate
  69          ***************************************************/
  70          void WriteInstruction (unsigned char dictate)
  71          {   
  72   1          while(BusyTest()==1); //如果忙就等待
  73   1         RS=0;                  //根据规定，RS和R/W同时为低电平时，可以写入指令
  74   1         RW=0;   
  75   1         E=0;                   //E置低电平(根据表8-6，写指令时，E为高脉冲，
  76   1                                   // 就是让E从0到1发生正跳变，所以应先置"0"
  77   1         _nop_();
  78   1         _nop_();             //空操作两个机器周期，给硬件反应时间
  79   1         P0=dictate;            //将数据送入P0口，即写入指令或地址
  80   1         _nop_();
  81   1         _nop_();
  82   1         _nop_();
  83   1         _nop_();               //空操作四个机器周期，给硬件反应时间
  84   1         E=1;                   //E置高电平
  85   1         _nop_();
  86   1         _nop_();
  87   1         _nop_();
  88   1         _nop_();               //空操作四个机器周期，给硬件反应时间
  89   1          E=0;                  //当E由高电平跳变成低电平时，液晶模块开始执行命令
  90   1       }
  91          /*****************************************************
  92          函数功能：指定字符显示的实际地址
  93          入口参数：x
  94          ***************************************************/
  95           void WriteAddress(unsigned char x)
  96           {
  97   1           WriteInstruction(x|0x80); //显示位置的确定方法规定为"80H+地址码x"
  98   1       }
  99          /*****************************************************
 100          函数功能：将数据(字符的标准ASCII码)写入液晶模块
 101          入口参数：y(为字符常量)
 102          ***************************************************/
 103           void WriteData(unsigned char y)
 104           {
 105   1          while(BusyTest()==1);  
 106   1          RS=1;           //RS为高电平，RW为低电平时，可以写入数据
 107   1          RW=0;
 108   1          E=0;            //E置低电平(根据表8-6，写指令时，E为高脉冲，
 109   1                             // 就是让E从0到1发生正跳变，所以应先置"0"
 110   1          P0=y;           //将数据送入P0口，即将数据写入液晶模块
 111   1          _nop_();
 112   1          _nop_();
 113   1          _nop_();
 114   1           _nop_();       //空操作四个机器周期，给硬件反应时间
 115   1          E=1;          //E置高电平
 116   1          _nop_();
 117   1          _nop_();
C51 COMPILER V9.50a   ______________                                                       12/19/2013 14:11:59 PAGE 3   

 118   1          _nop_();
 119   1         _nop_();        //空操作四个机器周期，给硬件反应时间
 120   1         E=0;            //当E由高电平跳变成低电平时，液晶模块开始执行命令
 121   1       }
 122          /*****************************************************
 123          函数功能：对LCD的显示模式进行初始化设置
 124          ***************************************************/
 125          void LcdInitiate(void)
 126          {
 127   1         delay(15);             //延时15ms，首次写指令时应给LCD一段较长的反应时间
 128   1         WriteInstruction(0x38);  //显示模式设置：16×2显示，5×7点阵，8位数据接口
 129   1        delay(5);               //延时5ms　，给硬件一点反应时间
 130   1         WriteInstruction(0x38);
 131   1        delay(5);
 132   1        WriteInstruction(0x38); //连续三次，确保初始化成功
 133   1        delay(5);
 134   1        WriteInstruction(0x0c);  //显示模式设置：显示开，无光标，光标不闪烁
 135   1        delay(5);
 136   1              WriteInstruction(0x06);  //显示模式设置：光标右移，字符不移
 137   1        delay(5);
 138   1        WriteInstruction(0x01);  //清屏幕指令，将以前的显示内容清除
 139   1        delay(5);
 140   1       }
 141           
 142          
 143          
 144          void main(void)   // 主程序
 145          {  uint distance_data,a,b;
 146   1         uchar CONT_1;  
 147   1      //  uchar k;   //定义变量i指向字符串数组元素
 148   1          LcdInitiate();         //调用LCD初始化函数  
 149   1         delay(10);             //延时10ms，给硬件一点反应时间
 150   1         WriteAddress(0x0b); 
 151   1         WriteData('2');  
 152   1            WriteData('0'); 
 153   1            WriteData('3'); 
 154   1         WriteData('1');  
 155   1            WriteData('9'); 
 156   1          
 157   1        
 158   1      //   WriteAddress(0x00);   // 从第1行第3列开始显示
 159   1      //   k = 0;               //指向字符数组的第1个元素
 160   1       // while(string[k] != '\0')
 161   1      //    {         
 162   1      //      WriteData(string[k]);
 163   1      //      k++;             //指向下字符数组一个元素       
 164   1      //    }  
 165   1         i=0;
 166   1      
 167   1         flag=0;
 168   1        Tx=0;       //首先拉低脉冲输入引脚
 169   1        TMOD=0x10;    //定时器0，定时器1，16位工作方式
 170   1      //  TR0=1;       //启动定时器0
 171   1         IT0=0;        //由高电平变低电平，触发外部中断
 172   1        //ET0=1;        //打开定时器0中断
 173   1        EX0=0;        //关闭外部中断
 174   1        EA=1;         //打开总中断0 
 175   1        
 176   1        
 177   1      while(1)         //程序循环
 178   1        {
 179   2         WriteAddress(0x00);    // 从第2行第6列开始显示
C51 COMPILER V9.50a   ______________                                                       12/19/2013 14:11:59 PAGE 4   

 180   2      //          WriteData('J');  
 181   2      //       WriteData('U');  
 182   2      //        WriteData('L');  
 183   2      //         WriteData('I');  
 184   2      //          WriteData(':'); 
 185   2      
 186   2      
 187   2            WriteData(digit[qian]); 
 188   2            WriteData(digit[bai]);  
 189   2            WriteData(digit[shi]);  
 190   2            WriteData('.');  
 191   2            WriteData(digit[ge]);  
 192   2            WriteData('c'); 
 193   2            WriteData('m'); 
 194   2          
 195   2             EA=0;
 196   2             Tx=1;
 197   2              delay_20us();
 198   2              Tx=0;         //产生一个20us的脉冲，在Tx引脚  
 199   2              while(Rx==0); //等待Rx回波引脚变高电平
 200   2             succeed_flag=0; //清测量成功标志
 201   2             EX0=1;          //打开外部中断
 202   2             EX1=1;
 203   2            TH1=0;          //定时器1清零
 204   2              TL1=0;          //定时器1清零
 205   2             TF1=0;          //
 206   2              TR1=1;          //启动定时器1
 207   2         EA=1;
 208   2      
 209   2            while(TH1 < 30);//等待测量的结果，周期65.535毫秒（可用中断实现）  
 210   2            TR1=0;          //关闭定时器1
 211   2              EX0=0;          //关闭外部中断
 212   2      
 213   2          if(succeed_flag==1)
 214   2             {  
 215   3             distance_data=outcomeH;                //测量结果的高8位
 216   3                 distance_data<<=8;                   //放入16位的高8位
 217   3               distance_data=distance_data|outcomeL;//与低8位合并成为16位结果数据
 218   3                  distance_data*=12;                  //因为定时器默认为12分频
 219   3                 distance_data/=58;                   //微秒的单位除以58等于厘米
 220   3               }                                      //为什么除以58等于厘米，  Y米=（X秒*344）/2
 221   2                                                   // X秒=（ 2*Y米）/344 ==》X秒=0.0058*Y米 ==》厘米=微秒/58 
 222   2          if(succeed_flag==0)
 223   2             {
 224   3                  distance_data=0;                    //没有回波则清零
 225   3      
 226   3                 }
 227   2      
 228   2                 distance[i]=distance_data; //将测量结果的数据放入缓冲区
 229   2                  i++;
 230   2               if(i==3)
 231   2                 {
 232   3                   distance_data=(distance[0]+distance[1]+distance[2]+distance[3])/4;
 233   3                    
 234   3                  pai_xu();
 235   3                   distance_data=distance[1];
 236   3      
 237   3            
 238   3           a=distance_data;
 239   3             if(b==a) CONT_1=0;
 240   3             if(b!=a) CONT_1++;
 241   3             if(CONT_1>=3)
C51 COMPILER V9.50a   ______________                                                       12/19/2013 14:11:59 PAGE 5   

 242   3             { CONT_1=0;
 243   4              b=a;
 244   4              conversion(b);
 245   4            }       
 246   3               i=0;
 247   3              }      
 248   2         }
 249   1      }
 250          //***************************************************************
 251          //外部中断0，用做判断回波电平
 252          INTO_()  interrupt 0   // 外部中断是0号
 253           {    
 254   1           outcomeH =TH1;    //取出定时器的值
 255   1           outcomeL =TL1;    //取出定时器的值
 256   1           succeed_flag=1;   //至成功测量的标志
 257   1           EX0=0;            //关闭外部中断
 258   1        }
 259            
 260          //***************************************************************
 261          //外部中断1，用做记录距离
 262          INT1_()  interrupt 2   // 外部中断是2号
 263           {    
 264   1           delay(15);
 265   1         if(KEY==0)
 266   1         {
 267   2            while(!KEY);
 268   2            
 269   2        
 270   2        if(j==2) j=0;
 271   2        if(j==0)  
 272   2          { 
 273   3            WriteAddress(0x40); 
 274   3            WriteData(' ');
 275   3            WriteData(' ');
 276   3            WriteData(' ');
 277   3            WriteData(' ');
 278   3            WriteData(' ');   
 279   3            WriteData(' ');
 280   3            WriteData('c');
 281   3            WriteData('m');
 282   3                  
 283   3            WriteAddress(0x40);
 284   3            WriteData(' '); 
 285   3            WriteData(digit[qian]);     
 286   3            WriteData(digit[bai]);  
 287   3            WriteData(digit[shi]);  
 288   3            WriteData('.');  
 289   3            WriteData(digit[ge]); 
 290   3          }
 291   2         
 292   2          if(j==1)  
 293   2          { 
 294   3            
 295   3            WriteAddress(0x48);       
 296   3            WriteData(' ');
 297   3            WriteData(' ');
 298   3            WriteData(' ');
 299   3            WriteData(' ');   
 300   3            WriteData(' ');
 301   3            WriteData(' ');
 302   3            WriteData('c');
 303   3            WriteData('m');
C51 COMPILER V9.50a   ______________                                                       12/19/2013 14:11:59 PAGE 6   

 304   3            
 305   3            WriteAddress(0x49); 
 306   3            WriteData(digit[qian]); 
 307   3            WriteData(digit[bai]);  
 308   3            WriteData(digit[shi]);  
 309   3            WriteData('.');  
 310   3            WriteData(digit[ge]); 
 311   3        
 312   3          }
 313   2         
 314   2            j++;
 315   2        }
 316   1       }  
 317            
 318            
 319            
 320          //****************************************************************
 321          //定时器0中断,用做显示
 322          timer0() interrupt 1  // 定时器0中断是1号
 323             {
 324   1        // TH0=0xfd; //写入定时器0初始值
 325   1        // TL0=0x77;    
 326   1        
 327   1         }
 328          
 329          //显示数据转换程序
 330          void conversion(uint temp_data)  
 331           {  
 332   1          uchar ge_data,shi_data,bai_data,qian_data ;
 333   1          qian_data=temp_data/1000;
 334   1          temp_data=temp_data%1000; 
 335   1          bai_data=temp_data/100 ;
 336   1          temp_data=temp_data%100;   //取余运算
 337   1          shi_data=temp_data/10 ;
 338   1          temp_data=temp_data%10;   //取余运算
 339   1          ge_data=temp_data;
 340   1      
 341   1         
 342   1      
 343   1          EA=0;
 344   1          qian=qian_data;
 345   1          bai = bai_data;
 346   1          shi = shi_data;
 347   1          ge  = ge_data ; 
 348   1         
 349   1         
 350   1         
 351   1         if(qian||bai||shi||ge!=0)
 352   1          BEEP=qian||bai;
 353   1         EA=1;
 354   1       }
 355          //******************************************************************
 356          
 357          
 358          void delay_20us()
 359           {  uchar bt ;
 360   1          for(bt=0;bt<60;bt++);
 361   1       }
 362             void pai_xu()
 363            {  uint t;
 364   1        if (distance[0]>distance[1])
 365   1          {t=distance[0];distance[0]=distance[1];distance[1]=t;} 
C51 COMPILER V9.50a   ______________                                                       12/19/2013 14:11:59 PAGE 7   

 366   1        if(distance[0]>distance[2])
 367   1          {t=distance[2];distance[2]=distance[0];distance[0]=t;} 
 368   1        if(distance[1]>distance[2])
 369   1          {t=distance[1];distance[1]=distance[2];distance[2]=t;}  
 370   1          }
 371          
 372          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    952    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
